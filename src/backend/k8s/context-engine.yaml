---
# Deployment configuration for Context Engine
apiVersion: apps/v1
kind: Deployment
metadata:
  name: context-engine
  namespace: ai-email-platform
  labels:
    app: context-engine
    component: analysis
    version: 1.0.0
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: context-engine
  template:
    metadata:
      labels:
        app: context-engine
        component: analysis
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: context-engine-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: context-engine
          image: context-engine:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
              name: http
            - containerPort: 9090
              protocol: TCP
              name: metrics
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
          envFrom:
            - configMapRef:
                name: context-engine-config
            - secretRef:
                name: context-engine-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /startup
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 30
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config-volume
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config-volume
          configMap:
            name: context-engine-config

---
# Service configuration for Context Engine
apiVersion: v1
kind: Service
metadata:
  name: context-engine-service
  namespace: ai-email-platform
  labels:
    app: context-engine
    component: analysis
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app: context-engine

---
# HorizontalPodAutoscaler configuration for Context Engine
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: context-engine-hpa
  namespace: ai-email-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: context-engine
  minReplicas: 3
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 4
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60

---
# Network Policy for Context Engine
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: context-engine-network-policy
  namespace: ai-email-platform
spec:
  podSelector:
    matchLabels:
      app: context-engine
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: api-gateway
        - podSelector:
            matchLabels:
              app: email-service
      ports:
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 9090
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mongodb-service
        - podSelector:
            matchLabels:
              app: redis-service
        - podSelector:
            matchLabels:
              app: metrics-service
      ports:
        - protocol: TCP