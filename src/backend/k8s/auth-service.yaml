# Auth Service Kubernetes Configuration
# Version: 1.0.0
# Dependencies:
# - auth0: ^4.0.0
# - configmap.yaml: Common configuration values
# - secrets.yaml: Auth0 credentials and JWT secrets

---
# Deployment configuration for the authentication service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
    component: authentication
    tier: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  # Maintain 3 replicas for high availability (99.9% uptime requirement)
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  # RollingUpdate strategy for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        security.alpha.kubernetes.io/sysctls: net.ipv4.tcp_syncookies=1
    spec:
      # Security context for enhanced pod security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      # Pod security policies
      serviceAccountName: auth-service-sa
      automountServiceAccountToken: true
      containers:
        - name: auth-service
          image: auth-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
              name: http
              protocol: TCP
          # Resource limits and requests
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          # Liveness probe for container health monitoring
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          # Readiness probe for service availability
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          # Environment configuration from ConfigMap and Secrets
          envFrom:
            - configMapRef:
                name: email-platform-config
            - secretRef:
                name: auth-service-secrets
          # Security context for container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          # Volume mounts for temporary data
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: auth-config
              mountPath: /app/config
              readOnly: true
      # Volumes configuration
      volumes:
        - name: tmp
          emptyDir: {}
        - name: auth-config
          configMap:
            name: email-platform-config
      # Pod disruption budget reference
      terminationGracePeriodSeconds: 30

---
# Service configuration for the authentication service
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
    component: authentication
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: ClusterIP
  ports:
    - port: 3001
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: auth-service

---
# Horizontal Pod Autoscaler for dynamic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# Network Policy for secure communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: auth-service-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: auth-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: api-gateway
      ports:
        - protocol: TCP
          port: 3001
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: auth0-service
    - to:
        - podSelector:
            matchLabels:
              app: redis-service
    - ports:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP