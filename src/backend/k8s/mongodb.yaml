---
# MongoDB StatefulSet Configuration
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: ai-email-platform
  labels:
    app: mongodb
    component: database
    part-of: email-platform
    tier: data
    managed-by: kubernetes
spec:
  serviceName: mongodb-service
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9216"
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mongodb
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mongodb
        image: mongo:6.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP
        - name: metrics
          containerPort: 9216
          protocol: TCP
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: root-password
        args:
        - "--config=/etc/mongodb/mongod.conf"
        - "--replSet=rs0"
        - "--bind_ip_all"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /etc/mongodb
        - name: mongodb-certs
          mountPath: /etc/mongodb/certs
          readOnly: true
        - name: mongodb-keys
          mountPath: /etc/mongodb/keys
          readOnly: true
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      - name: mongodb-exporter
        image: percona/mongodb_exporter:0.20
        ports:
        - name: metrics
          containerPort: 9216
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-secrets
              key: monitoring-uri
      volumes:
      - name: mongodb-config
        configMap:
          name: mongodb-config
      - name: mongodb-certs
        secret:
          secretName: mongodb-certs
      - name: mongodb-keys
        secret:
          secretName: mongodb-keys
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "gp2"
      resources:
        requests:
          storage: 100Gi

---
# MongoDB Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: ai-email-platform
  labels:
    app: mongodb
    component: database
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
    protocol: TCP
  - name: metrics
    port: 9216
    targetPort: metrics
    protocol: TCP
  selector:
    app: mongodb

---
# MongoDB Headless Service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: mongodb-headless
  namespace: ai-email-platform
  labels:
    app: mongodb
    component: database
spec:
  clusterIP: None
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
    protocol: TCP
  selector:
    app: mongodb

---
# MongoDB Backup CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup
  namespace: ai-email-platform
  labels:
    app: mongodb
    component: backup
spec:
  schedule: "0 2 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: mongo:6.0
            command:
            - /bin/sh
            - -c
            - |
              mongodump --uri="$(MONGODB_URI)" --gzip --archive=/backup/mongodb-$(date +%Y%m%d_%H%M%S).gz
              aws s3 cp /backup/*.gz s3://ai-email-platform-backups/mongodb/
            env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: backup-uri
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: aws-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: aws-secret-key
            volumeMounts:
            - name: backup
              mountPath: /backup
          volumes:
          - name: backup
            emptyDir: {}
          restartPolicy: OnFailure