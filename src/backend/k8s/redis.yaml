---
# Redis StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: ai-email-platform
  labels:
    app: redis
    tier: cache
spec:
  replicas: 3
  serviceName: redis-service
  selector:
    matchLabels:
      app: redis
      tier: cache
  template:
    metadata:
      labels:
        app: redis
        tier: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
        - name: redis
          image: redis:7.0-alpine
          ports:
            - name: redis
              containerPort: 6379
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /usr/local/etc/redis
              readOnly: true
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.44.0
          ports:
            - name: metrics
              containerPort: 9121
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp2
        resources:
          requests:
            storage: 10Gi
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: ai-email-platform
  labels:
    app: redis
    tier: cache
spec:
  ports:
    - port: 6379
      targetPort: redis
      name: redis
    - port: 9121
      targetPort: metrics
      name: metrics
  selector:
    app: redis
    tier: cache
  clusterIP: None
---
# Redis Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-network-policy
  namespace: ai-email-platform
spec:
  podSelector:
    matchLabels:
      app: redis
      tier: cache
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: context-engine
        - podSelector:
            matchLabels:
              app: response-generator
      ports:
        - protocol: TCP
          port: 6379
        - protocol: TCP
          port: 9121
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ai-email-platform
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
---
# Redis Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: ai-email-platform
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: redis
      tier: cache